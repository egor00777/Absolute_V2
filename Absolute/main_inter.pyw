# Form implementation generated from reading ui file 'main_inter.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from os import path, chdir
chdir(path.dirname(path.abspath(__file__)))
# system('pip3 install -r requirements.txt')



from os import startfile
from time import sleep
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QThread,pyqtSignal
from sys import argv, exit
import time
import psutil
class Starting_pack(QThread):
        item1=pyqtSignal(str)
        item2=pyqtSignal(str)
        item3=pyqtSignal(str)
        item4=pyqtSignal(str)
        item5=pyqtSignal(str)
        main=pyqtSignal(str)
        def __init__(self, timeout=1*2):
                super().__init__()
                self.timeout = timeout
                
        def run(self):
                


                def Main_re():
                      self.item1.emit('Да')
                      self.item2.emit('Да')
                      self.item3.emit('Да')
                      self.item4.emit('Да')
                      self.item5.emit('Да')
                      self.main.emit('Готов к работе')
                def capha():
                      self.item1.emit('Да')
                      self.item2.emit('Да')
                      self.main.emit('Запускается')
                def final_r():
                      self.item1.emit('Да')
                      self.item2.emit('Да')
                      self.item3.emit('Да')
                      self.main.emit('Запускается')
                def Proto():
                      self.item1.emit('Да')
                      self.main.emit('Запускается')
                def cheak_programs():
                      self.item1.emit('Да')
                      self.item2.emit('Да')
                      self.item3.emit('Да')
                      self.item4.emit('Да')
                      self.main.emit('Запускается')
                def zero():
                      self.item1.emit('Нет')
                      self.item2.emit('Нет')
                      self.item3.emit('Нет')
                      self.item4.emit('Нет')
                      self.item5.emit('Нет')
                      self.main.emit('Не готов')                     
                status={
                      '0':zero,
                      '1':Proto,
                      '2':capha,
                      '3':final_r,
                      '4':cheak_programs,
                      '5':Main_re
                }
                while True:
                        f =open(path.realpath('re_sp/text_command_red.txt'),'r+', encoding='utf-8')
                        a=f.read()
                        f.close
                        

                        if a !='':
                                for x in range(1,6):
                                        if x == int(a):
                                                status[str(x)]()
                        else:
                                status['0']()
                        
                        time.sleep(self.timeout)    

class Ui_MainWindow(object):
    


    def __init__(self):
        super().__init__()
        self.thread = Starting_pack()
        self.thread.start()
        

    def open_explo(self):
        import webbrowser
        pathes = path.dirname(path.abspath(__file__))[:-10]
        webbrowser.open(pathes)
    def open_help_file(self):
        startfile(path.realpath('For_Absolute/parametr.txt'))
    def open_site(self):

        pass
    




    def functions(self):
        self.button_start.clicked.connect(self.start_programm)
        

    def start_programm(self):

        f= open(path.realpath("re_sp/text_command_red.txt"), 'w+', encoding='utf-8')
        f.write('')
        f.close()

        if self.last_chose.isChecked()==False:
                file = open("For_Absolute/parametr.txt", 'w', encoding='utf-8')
                file.write(str(self.chose_voise.currentText())+"\n")
                file.write(str(self.lineEdit.text())+"\n")
                file.write(str(self.vpl_slid.value())+"\n")
                file.write(str(self.speed_slid.value())+"\n")
                file.write(str(self.musik_name_edit.text())+"\n")
                file.close()
                startfile(path.realpath('re_sp/main_re.py'))
        elif self.last_chose.isChecked()==True:
                startfile(path.realpath('re_sp/main_re.py'))
                pass





    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 600))
        MainWindow.setMaximumSize(QtCore.QSize(1000, 600))
        MainWindow.setBaseSize(QtCore.QSize(1000, 600))
        MainWindow.setStyleSheet("background: rgb(59, 59, 59);\n"
"color: rgb(245, 245, 245);\n"
"font: 700 11pt \"Verdana\";\n"
"")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet("background: rgb(80, 80, 80)")
        self.centralwidget.setObjectName("centralwidget")
        self.blok_voise = QtWidgets.QWidget(parent=self.centralwidget)
        self.blok_voise.setGeometry(QtCore.QRect(10, 10, 380, 220))
        self.blok_voise.setStyleSheet("background:rgb(97, 97, 97);\n"
"border-radius: 20%;")
        self.blok_voise.setObjectName("blok_voise")
        self.speed_slid = QtWidgets.QSlider(parent=self.blok_voise)
        self.speed_slid.setGeometry(QtCore.QRect(15, 100, 350, 25))
        self.speed_slid.setStyleSheet("background-color: rgba(130, 130, 130, 0);")
        self.speed_slid.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.speed_slid.setObjectName("speed_slid")
        self.vpl_slid = QtWidgets.QSlider(parent=self.blok_voise)
        self.vpl_slid.setGeometry(QtCore.QRect(15, 40, 350, 25))
        self.vpl_slid.setStyleSheet("background-color: rgba(130, 130, 130, 0);")
        self.vpl_slid.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.vpl_slid.setObjectName("vpl_slid")
        self.speed = QtWidgets.QLabel(parent=self.blok_voise)
        self.speed.setGeometry(QtCore.QRect(15, 70, 200, 20))
        self.speed.setStyleSheet("background-color: rgba(130, 130, 130, 0);")
        self.speed.setObjectName("speed")
        self.vol = QtWidgets.QLabel(parent=self.blok_voise)
        self.vol.setGeometry(QtCore.QRect(15, 10, 100, 20))
        self.vol.setStyleSheet("background-color: rgba(130, 130, 130, 0);")
        self.vol.setObjectName("vol")
        self.musik_name_edit = QtWidgets.QLineEdit(parent=self.blok_voise)
        self.musik_name_edit.setGeometry(QtCore.QRect(175, 135, 190, 20))
        self.musik_name_edit.setStyleSheet("background-color: rgb(130, 130, 130);")
        self.musik_name_edit.setInputMask("")
        self.musik_name_edit.setText("")
        self.musik_name_edit.setMaxLength(32767)
        self.musik_name_edit.setFrame(True)
        self.musik_name_edit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.musik_name_edit.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.musik_name_edit.setDragEnabled(False)
        self.musik_name_edit.setReadOnly(False)
        self.musik_name_edit.setObjectName("musik_name_edit")
        self.musik_name = QtWidgets.QLabel(parent=self.blok_voise)
        self.musik_name.setGeometry(QtCore.QRect(15, 135, 160, 20))
        self.musik_name.setObjectName("musik_name")
        self.widget_2 = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget_2.setGeometry(QtCore.QRect(410, 10, 580, 220))
        self.widget_2.setStyleSheet("background:rgb(97, 97, 97);\n"
"border-radius: 20%;")
        self.widget_2.setObjectName("widget_2")
        self.name = QtWidgets.QLabel(parent=self.widget_2)
        self.name.setGeometry(QtCore.QRect(15, 130, 70, 22))
        self.name.setObjectName("name")
        self.voise = QtWidgets.QLabel(parent=self.widget_2)
        self.voise.setGeometry(QtCore.QRect(305, 130, 100, 22))
        self.voise.setObjectName("voise")
        self.chose_voise = QtWidgets.QComboBox(parent=self.widget_2)
        self.chose_voise.setGeometry(QtCore.QRect(385, 130, 180, 22))
        self.chose_voise.setStyleSheet("color:rgb(255, 255, 255);\n"
"background-color: rgb(130, 130, 130);\n"
"border-color: rgb(255, 255, 255);")
        self.chose_voise.setObjectName("chose_voise")
        self.chose_voise.addItem("")
        self.chose_voise.addItem("")
        self.chose_voise.addItem("")
        self.chose_voise.addItem("")
        self.main_name = QtWidgets.QLabel(parent=self.widget_2)
        self.main_name.setGeometry(QtCore.QRect(140, 10, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setStrikeOut(False)
        self.main_name.setFont(font)
        self.main_name.setStyleSheet("font: 700  20pt \"Verdana\";\n"
"background-color: rgba(130, 130, 130, 0);")
        self.main_name.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.main_name.setObjectName("main_name")
        self.lineEdit = QtWidgets.QLineEdit(parent=self.widget_2)
        self.lineEdit.setGeometry(QtCore.QRect(95, 130, 180, 22))
        self.lineEdit.setStyleSheet("background-color: rgb(130, 130, 130);")
        self.lineEdit.setObjectName("lineEdit")
        self.warning = QtWidgets.QLabel(parent=self.widget_2)
        self.warning.setGeometry(QtCore.QRect(15, 164, 550, 41))
        self.warning.setScaledContents(False)
        self.warning.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.warning.setWordWrap(True)
        self.warning.setObjectName("warning")
        self.widget_3 = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget_3.setGeometry(QtCore.QRect(10, 250, 380, 320))
        self.widget_3.setStyleSheet("background:rgb(97, 97, 97);\n"
"border-radius: 20%;")
        self.widget_3.setObjectName("widget_3")
        self.last_chose = QtWidgets.QCheckBox(parent=self.widget_3)
        self.last_chose.setGeometry(QtCore.QRect(15, 15, 350, 20))
        self.last_chose.setIconSize(QtCore.QSize(16, 16))
        self.last_chose.setChecked(True)
        self.last_chose.setObjectName("last_chose")
        self.last_chose_label = QtWidgets.QLabel(parent=self.widget_3)
        self.last_chose_label.setGeometry(QtCore.QRect(15, 50, 350, 20))
        self.last_chose_label.setObjectName("last_chose_label")
        self.label_6 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_6.setGeometry(QtCore.QRect(15, 85, 87, 20))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_7.setGeometry(QtCore.QRect(102, 85, 87, 20))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_8.setGeometry(QtCore.QRect(190, 85, 87, 20))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_9.setGeometry(QtCore.QRect(277, 85, 87, 20))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_10.setGeometry(QtCore.QRect(102, 120, 87, 20))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_11.setGeometry(QtCore.QRect(277, 120, 87, 20))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_12.setGeometry(QtCore.QRect(190, 120, 87, 20))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_13.setGeometry(QtCore.QRect(15, 120, 87, 20))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_14.setGeometry(QtCore.QRect(277, 155, 87, 20))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_15.setGeometry(QtCore.QRect(102, 155, 87, 20))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_16.setGeometry(QtCore.QRect(15, 155, 87, 20))
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_17.setGeometry(QtCore.QRect(190, 155, 87, 20))
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_18.setGeometry(QtCore.QRect(277, 190, 87, 20))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_19.setGeometry(QtCore.QRect(102, 190, 87, 20))
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_20.setGeometry(QtCore.QRect(15, 190, 87, 20))
        self.label_20.setObjectName("label_20")
        self.label_21 = QtWidgets.QLabel(parent=self.widget_3)
        self.label_21.setGeometry(QtCore.QRect(190, 190, 87, 20))
        self.label_21.setObjectName("label_21")
        self.widget_4 = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget_4.setGeometry(QtCore.QRect(410, 250, 270, 320))
        self.widget_4.setStyleSheet("background:rgb(97, 97, 97);\n"
"border-radius: 20%;")
        self.widget_4.setObjectName("widget_4")
        self.name_of_file = QtWidgets.QListWidget(parent=self.widget_4)
        self.name_of_file.setGeometry(QtCore.QRect(15, 15, 120, 281))
        self.name_of_file.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.name_of_file.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.name_of_file.setAutoScroll(False)
        self.name_of_file.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        self.name_of_file.setProperty("showDropIndicator", False)
        self.name_of_file.setDefaultDropAction(QtCore.Qt.DropAction.CopyAction)
        self.name_of_file.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.NoSelection)
        self.name_of_file.setTextElideMode(QtCore.Qt.TextElideMode.ElideMiddle)
        self.name_of_file.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollMode.ScrollPerPixel)
        self.name_of_file.setMovement(QtWidgets.QListView.Movement.Static)
        self.name_of_file.setFlow(QtWidgets.QListView.Flow.TopToBottom)
        self.name_of_file.setProperty("isWrapping", False)
        self.name_of_file.setResizeMode(QtWidgets.QListView.ResizeMode.Fixed)
        self.name_of_file.setLayoutMode(QtWidgets.QListView.LayoutMode.Batched)
        self.name_of_file.setViewMode(QtWidgets.QListView.ViewMode.ListMode)
        self.name_of_file.setModelColumn(0)
        self.name_of_file.setBatchSize(100)
        self.name_of_file.setObjectName("name_of_file")
        item = QtWidgets.QListWidgetItem()
        self.name_of_file.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.name_of_file.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.name_of_file.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.name_of_file.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.name_of_file.addItem(item)
        self.icon_of_file = QtWidgets.QListWidget(parent=self.widget_4)
        self.icon_of_file.setGeometry(QtCore.QRect(135, 15, 120, 291))
        self.icon_of_file.setLayoutDirection(QtCore.Qt.LayoutDirection.RightToLeft)
        self.icon_of_file.setAutoScroll(False)
        self.icon_of_file.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        self.icon_of_file.setProperty("showDropIndicator", False)
        self.icon_of_file.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.NoSelection)
        self.icon_of_file.setTextElideMode(QtCore.Qt.TextElideMode.ElideLeft)
        self.icon_of_file.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollMode.ScrollPerItem)
        self.icon_of_file.setMovement(QtWidgets.QListView.Movement.Static)
        self.icon_of_file.setFlow(QtWidgets.QListView.Flow.TopToBottom)
        self.icon_of_file.setResizeMode(QtWidgets.QListView.ResizeMode.Fixed)
        self.icon_of_file.setLayoutMode(QtWidgets.QListView.LayoutMode.Batched)
        self.icon_of_file.setViewMode(QtWidgets.QListView.ViewMode.ListMode)
        self.icon_of_file.setObjectName("icon_of_file")
        item = QtWidgets.QListWidgetItem()
        self.icon_of_file.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.icon_of_file.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.icon_of_file.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.icon_of_file.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.icon_of_file.addItem(item)
        self.widget_5 = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget_5.setGeometry(QtCore.QRect(700, 250, 290, 320))
        self.widget_5.setStyleSheet("background:rgb(97, 97, 97);\n"
"border-radius: 20%;")
        self.widget_5.setObjectName("widget_5")
        self.button_start = QtWidgets.QPushButton(parent=self.widget_5)
        self.button_start.setGeometry(QtCore.QRect(30, 190, 230, 50))
        self.button_start.setStyleSheet("font: 700 18pt \"Verdana\";\n"
"background-color: rgb(130, 130, 130);\n"
"border-radius: 10%")
        self.button_start.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.button_start.setCheckable(False)
        self.button_start.setChecked(False)
        self.button_start.setAutoRepeat(False)
        self.button_start.setAutoExclusive(False)
        self.button_start.setAutoDefault(False)
        self.button_start.setDefault(False)
        self.button_start.setFlat(False)
        self.button_start.setObjectName("button_start")
        self.workind_or_not = QtWidgets.QLabel(parent=self.widget_5)
        self.workind_or_not.setGeometry(QtCore.QRect(30, 20, 230, 70))
        self.workind_or_not.setStyleSheet("font: 700 14pt \"Verdana\";\n"
"background-color: rgba(130, 130, 130, 0);\n"
"")
        self.workind_or_not.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.workind_or_not.setObjectName("workind_or_not")
        self.widget_5.raise_()
        self.blok_voise.raise_()
        self.widget_2.raise_()
        self.widget_3.raise_()
        self.widget_4.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 24))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        self.menubar.setFont(font)
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(parent=self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.action = QtGui.QAction(parent=MainWindow)
        self.action.setObjectName("action")
        self.action_2 = QtGui.QAction(parent=MainWindow)
        self.action_2.setObjectName("action_2")
        self.action_3 = QtGui.QAction(parent=MainWindow)
        self.action_3.setObjectName("action_3")
        self.menu.addAction(self.action)
        self.menu.addAction(self.action_2)
        self.menu.addAction(self.action_3)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.speed.setText(_translate("MainWindow", "Скорость речи"))
        self.vol.setText(_translate("MainWindow", "Громкость"))
        self.musik_name_edit.setPlaceholderText(_translate("MainWindow", "https://"))
        self.musik_name.setText(_translate("MainWindow", "Любимая музыка:"))
        self.name.setText(_translate("MainWindow", "Имя:"))
        self.voise.setText(_translate("MainWindow", "Голос:"))
        self.chose_voise.setItemText(0, _translate("MainWindow", "Ирина"))
        self.chose_voise.setItemText(1, _translate("MainWindow", "Александр"))
        self.chose_voise.setItemText(2, _translate("MainWindow", "Анна"))
        self.chose_voise.setItemText(3, _translate("MainWindow", "Елена"))
        self.main_name.setText(_translate("MainWindow", "Absolute V2"))
        self.warning.setText(_translate("MainWindow", "Внимание! Имена с непроизносимыми символами и на иностранном языке не обрабатываются"))
        self.last_chose.setText(_translate("MainWindow", "Использовать последние настройки"))
        self.last_chose_label.setText(_translate("MainWindow", "Последние настройки:"))
        self.label_6.setText(_translate("MainWindow", "Имя:"))
        self.label_7.setText(_translate("MainWindow", "Голос:"))
        self.label_8.setText(_translate("MainWindow", "Гром-ть:"))
        self.label_9.setText(_translate("MainWindow", "Скорость:"))
        self.label_10.setText(_translate("MainWindow", "-"))
        self.label_11.setText(_translate("MainWindow", "-"))
        self.label_12.setText(_translate("MainWindow", "-"))
        self.label_13.setText(_translate("MainWindow", "-"))
        self.label_14.setText(_translate("MainWindow", "-"))
        self.label_15.setText(_translate("MainWindow", "-"))
        self.label_16.setText(_translate("MainWindow", "-"))
        self.label_17.setText(_translate("MainWindow", "-"))
        self.label_18.setText(_translate("MainWindow", "-"))
        self.label_19.setText(_translate("MainWindow", "-"))
        self.label_20.setText(_translate("MainWindow", "-"))
        self.label_21.setText(_translate("MainWindow", "-"))
        __sortingEnabled = self.name_of_file.isSortingEnabled()
        self.name_of_file.setSortingEnabled(False)
        item = self.name_of_file.item(0)
        item.setText(_translate("MainWindow", "Main_re"))
        item = self.name_of_file.item(1)
        item.setText(_translate("MainWindow", "capha"))
        item = self.name_of_file.item(2)
        item.setText(_translate("MainWindow", "final_rnm"))
        item = self.name_of_file.item(3)
        item.setText(_translate("MainWindow", "Protocols"))
        item = self.name_of_file.item(4)
        item.setText(_translate("MainWindow", "cheak_prog"))
        self.name_of_file.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.icon_of_file.isSortingEnabled()
        self.icon_of_file.setSortingEnabled(False)
        item = self.icon_of_file.item(0)
        item.setText(_translate("MainWindow", "Нет"))
        self.thread.item5.connect(item.setText)
        item = self.icon_of_file.item(1)
        item.setText(_translate("MainWindow", "Нет"))
        self.thread.item2.connect(item.setText)
        item = self.icon_of_file.item(2)
        item.setText(_translate("MainWindow", "Нет"))
        self.thread.item3.connect(item.setText)
        item = self.icon_of_file.item(3)
        item.setText(_translate("MainWindow", "Нет"))
        self.thread.item1.connect(item.setText)
        item = self.icon_of_file.item(4)
        item.setText(_translate("MainWindow", "Нет"))
        self.thread.item4.connect(item.setText)
        self.icon_of_file.setSortingEnabled(__sortingEnabled)
        self.button_start.setText(_translate("MainWindow", "ПУСК!"))
        self.workind_or_not.setText(_translate("MainWindow", "ИИ не работает"))
        self.thread.main.connect(self.workind_or_not.setText)
        self.menu.setTitle(_translate("MainWindow", "Меню"))
        self.action.setText(_translate("MainWindow", "Файлы"))
        self.action_2.setText(_translate("MainWindow", "Сайт"))
        self.action_3.setText(_translate("MainWindow", "Точечная настройка"))
        self.functions()

if __name__ == "__main__":

    f= open(path.realpath("re_sp/text_command_red.txt"), 'w+', encoding='utf-8')
    f.write('')
    f.close()

    app = QtWidgets.QApplication(argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    print(argv)
    exit(app.exec())
    
